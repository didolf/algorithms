/**
 * Функция решает задачу о непрерывном рюкзаке. Нам дана вместимость рюкзака и массив вещей,
 * которые мы в него можем положить. Каждый элемент массива имеет формат [стоимость вещи, объем вещи].
 * Мы можем складывать в рюкзак вещи не только полностью, но и беря какие-то части от них.
 * @param backpackCapacity - вместимость рюкзака.
 * @param things - массив вещей, из которых мы выбираем. Каждый элемент имеет вид [стоимость вещи, объем вещи].
 * @returns Возвращает стоимость самого выгодного рюкзака с точностью до 3 знаков.
 */
function continuousBackpack(backpackCapacity, things)
{
    things = things.sort((a, b) => b[0] / b[1] - a[0] / a[1]);
    let curPack = 0, curPackMoney = 0, i = 0;
    while (curPack < backpackCapacity && i < things.length)
    {
        if (things[i][1] <= backpackCapacity - curPack)
        {
            curPack += things[i][1];
            curPackMoney += things[i][0];
        }
        else
        {
            curPackMoney += things[i][0] * (backpackCapacity - curPack) / things[i][1];
            curPack = backpackCapacity;
        }
        i++;
    }
    return (curPackMoney.toFixed(3));
}

export default continuousBackpack;